version: '3.8'

# ðŸ”¥ ELK STACK - OPTIMIZED FOR LOCAL DEVELOPMENT
# Resource Usage: ~1-1.5GB RAM (optimized)
# Best for: Production-like setup, learning ELK, advanced log analysis
# Note: Stop when not actively debugging to save resources

services:
  # Elasticsearch - Log Storage (Optimized)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx512m"  # Reduced from 512/512 to 256/512
      - cluster.name=fullstack-logs
      - node.name=elasticsearch-node-1
      - bootstrap.memory_lock=false  # Disable memory locking for development
      - indices.query.bool.max_clause_count=2048
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - fullstack-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M  # Hard limit
        reservations:
          memory: 512M

  # Logstash - Log Processing & Aggregation (Optimized)
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - logstash-data:/usr/share/logstash/data
    ports:
      - "5044:5044"  # Beats input
      - "5000:5000"  # TCP input
      - "9600:9600"  # Monitoring API
    environment:
      - "LS_JAVA_OPTS=-Xms128m -Xmx256m"  # Reduced from 256/256
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - pipeline.workers=2  # Limit workers
      - pipeline.batch.size=125
    networks:
      - fullstack-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Kibana - Log Visualization & Analysis (Optimized)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
      - XPACK_SECURITY_ENABLED=false
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=min-32-byte-long-strong-encryption-key-here
      - NODE_OPTIONS=--max-old-space-size=512  # Limit Node.js memory
    networks:
      - fullstack-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M

  # Filebeat - Log Shipper (collects from Docker containers)
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat-data:/usr/share/filebeat/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - LOGSTASH_HOSTS=logstash:5044
    networks:
      - fullstack-network
    depends_on:
      - logstash
      - elasticsearch
    restart: unless-stopped

networks:
  fullstack-network:
    external: true
    name: fullstack-project-hybrid-network

volumes:
  elasticsearch-data:
    driver: local
  logstash-data:
    driver: local
  filebeat-data:
    driver: local
