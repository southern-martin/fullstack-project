{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Fullstack Project API",
    "description": "Complete API collection for the Fullstack Project with working Auth service endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345678"
  },
  "item": [
    {
      "name": "üîê Auth Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/health",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the Auth service is running"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/v1/health",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"OK\",\n  \"service\": \"auth-service\",\n  \"timestamp\": \"2025-10-15T11:49:21.832Z\"\n}"
            }
          ]
        },
        {
          "name": "Login - Test User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('access_token', response.data.token);",
                  "        pm.environment.set('user_id', response.data.user.id);",
                  "        pm.environment.set('user_email', response.data.user.email);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@gmail.com\",\n  \"password\": \"Admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with test user credentials"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@gmail.com\",\n  \"password\": \"Admin123\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Login successful\",\n  \"data\": {\n    \"user\": {\n      \"id\": 3,\n      \"email\": \"test@gmail.com\",\n      \"name\": \"Test User\",\n      \"role\": \"admin\",\n      \"createdAt\": \"2025-10-15T11:46:26.111Z\",\n      \"updatedAt\": \"2025-10-15T11:46:26.113Z\"\n    },\n    \"token\": \"mock-jwt-token-3-1760528786111\",\n    \"expiresIn\": \"24h\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Login - Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('access_token', response.data.token);",
                  "        pm.environment.set('user_id', response.data.user.id);",
                  "        pm.environment.set('user_email', response.data.user.email);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with admin user credentials"
          },
          "response": []
        },
        {
          "name": "Login - Regular User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.environment.set('access_token', response.data.token);",
                  "        pm.environment.set('user_id', response.data.user.id);",
                  "        pm.environment.set('user_email', response.data.user.email);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"user123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with regular user credentials"
          },
          "response": []
        },
        {
          "name": "Register New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"New User\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Validate Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{access_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/validate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "validate"]
            },
            "description": "Validate JWT token"
          },
          "response": []
        }
      ],
      "description": "Authentication service endpoints for user login, registration, and token validation. All responses use standardized ApiResponseDto format."
    },
    {
      "name": "üë• User Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{user_service_url}}/api/v1/health",
              "host": ["{{user_service_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the User service is running"
          },
          "response": []
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_service_url}}/api/v1/users?page=1&limit=10",
              "host": ["{{user_service_url}}"],
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get paginated list of users"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_service_url}}/api/v1/users/{{user_id}}",
              "host": ["{{user_service_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}"]
            },
            "description": "Get user details by ID"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"New User\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{user_service_url}}/api/v1/users",
              "host": ["{{user_service_url}}"],
              "path": ["api", "v1", "users"]
            },
            "description": "Create a new user"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated User Name\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{user_service_url}}/api/v1/users/{{user_id}}",
              "host": ["{{user_service_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}"]
            },
            "description": "Update user information"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{user_service_url}}/api/v1/users/{{user_id}}",
              "host": ["{{user_service_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}"]
            },
            "description": "Delete a user"
          },
          "response": []
        }
      ],
      "description": "User management service endpoints. All responses use standardized ApiResponseDto format."
    },
    {
      "name": "üè¢ Customer Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{customer_service_url}}/api/v1/health",
              "host": ["{{customer_service_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the Customer service is running"
          },
          "response": []
        },
        {
          "name": "Get All Customers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_service_url}}/api/v1/customers?page=1&limit=10",
              "host": ["{{customer_service_url}}"],
              "path": ["api", "v1", "customers"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get paginated list of customers"
          },
          "response": []
        },
        {
          "name": "Get Customer by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_service_url}}/api/v1/customers/1",
              "host": ["{{customer_service_url}}"],
              "path": ["api", "v1", "customers", "1"]
            },
            "description": "Get customer details by ID"
          },
          "response": []
        },
        {
          "name": "Create Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, Country\"\n}"
            },
            "url": {
              "raw": "{{customer_service_url}}/api/v1/customers",
              "host": ["{{customer_service_url}}"],
              "path": ["api", "v1", "customers"]
            },
            "description": "Create a new customer"
          },
          "response": []
        },
        {
          "name": "Update Customer",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"456 Oak Ave, City, Country\"\n}"
            },
            "url": {
              "raw": "{{customer_service_url}}/api/v1/customers/1",
              "host": ["{{customer_service_url}}"],
              "path": ["api", "v1", "customers", "1"]
            },
            "description": "Update customer information"
          },
          "response": []
        },
        {
          "name": "Delete Customer",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{customer_service_url}}/api/v1/customers/1",
              "host": ["{{customer_service_url}}"],
              "path": ["api", "v1", "customers", "1"]
            },
            "description": "Delete a customer"
          },
          "response": []
        }
      ],
      "description": "Customer management service endpoints. All responses use standardized ApiResponseDto format."
    },
    {
      "name": "üöö Carrier Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{carrier_service_url}}/api/v1/health",
              "host": ["{{carrier_service_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the Carrier service is running"
          },
          "response": []
        },
        {
          "name": "Get All Carriers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{carrier_service_url}}/api/v1/carriers?page=1&limit=10",
              "host": ["{{carrier_service_url}}"],
              "path": ["api", "v1", "carriers"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get paginated list of carriers"
          },
          "response": []
        },
        {
          "name": "Get Carrier by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{carrier_service_url}}/api/v1/carriers/1",
              "host": ["{{carrier_service_url}}"],
              "path": ["api", "v1", "carriers", "1"]
            },
            "description": "Get carrier details by ID"
          },
          "response": []
        },
        {
          "name": "Create Carrier",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Fast Delivery Co\",\n  \"contactEmail\": \"contact@fastdelivery.com\",\n  \"contactPhone\": \"+1234567890\",\n  \"serviceAreas\": [\"US\", \"Canada\"],\n  \"maxWeight\": 100,\n  \"maxVolume\": 50\n}"
            },
            "url": {
              "raw": "{{carrier_service_url}}/api/v1/carriers",
              "host": ["{{carrier_service_url}}"],
              "path": ["api", "v1", "carriers"]
            },
            "description": "Create a new carrier"
          },
          "response": []
        },
        {
          "name": "Update Carrier",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Super Fast Delivery Co\",\n  \"contactEmail\": \"contact@superfastdelivery.com\",\n  \"contactPhone\": \"+1234567890\",\n  \"serviceAreas\": [\"US\", \"Canada\", \"Mexico\"],\n  \"maxWeight\": 150,\n  \"maxVolume\": 75\n}"
            },
            "url": {
              "raw": "{{carrier_service_url}}/api/v1/carriers/1",
              "host": ["{{carrier_service_url}}"],
              "path": ["api", "v1", "carriers", "1"]
            },
            "description": "Update carrier information"
          },
          "response": []
        },
        {
          "name": "Delete Carrier",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{carrier_service_url}}/api/v1/carriers/1",
              "host": ["{{carrier_service_url}}"],
              "path": ["api", "v1", "carriers", "1"]
            },
            "description": "Delete a carrier"
          },
          "response": []
        }
      ],
      "description": "Carrier management service endpoints. All responses use standardized ApiResponseDto format."
    },
    {
      "name": "üí∞ Pricing Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/health",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the Pricing service is running"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{pricing_service_url}}/api/v1/health",
                  "host": ["{{pricing_service_url}}"],
                  "path": ["api", "v1", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": {\n    \"status\": \"ok\",\n    \"timestamp\": \"2025-10-20T14:27:37.731Z\",\n    \"service\": \"pricing-service\"\n  },\n  \"message\": \"Success\",\n  \"statusCode\": 200,\n  \"timestamp\": \"2025-10-20T14:27:37.732Z\",\n  \"success\": true\n}"
            }
          ]
        },
        {
          "name": "Get All Pricing Rules",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/rules?page=1&limit=10",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "rules"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Get paginated list of pricing rules"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{pricing_service_url}}/api/v1/pricing/rules?page=1&limit=10",
                  "host": ["{{pricing_service_url}}"],
                  "path": ["api", "v1", "pricing", "rules"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": {\n    \"pricingRules\": [],\n    \"total\": 0,\n    \"page\": 1,\n    \"limit\": 10,\n    \"totalPages\": 0\n  },\n  \"message\": \"Success\",\n  \"statusCode\": 200,\n  \"timestamp\": \"2025-10-20T14:31:44.950Z\",\n  \"success\": true\n}"
            }
          ]
        },
        {
          "name": "Get Rules Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/rules/count",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "rules", "count"]
            },
            "description": "Get total count of pricing rules"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{pricing_service_url}}/api/v1/pricing/rules/count",
                  "host": ["{{pricing_service_url}}"],
                  "path": ["api", "v1", "pricing", "rules", "count"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": {\n    \"count\": 0\n  },\n  \"message\": \"Success\",\n  \"statusCode\": 200,\n  \"timestamp\": \"2025-10-20T14:31:44.972Z\",\n  \"success\": true\n}"
            }
          ]
        },
        {
          "name": "Get Pricing Rule by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/rules/1",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "rules", "1"]
            },
            "description": "Get pricing rule details by ID"
          },
          "response": []
        },
        {
          "name": "Create Pricing Rule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Standard Shipping\",\n  \"description\": \"Standard shipping rates\",\n  \"conditions\": {\n    \"minWeight\": 0,\n    \"maxWeight\": 100,\n    \"minDistance\": 0,\n    \"maxDistance\": 1000\n  },\n  \"pricing\": {\n    \"basePrice\": 10.00,\n    \"pricePerKg\": 2.50,\n    \"pricePerKm\": 0.15\n  },\n  \"isActive\": true,\n  \"priority\": 1,\n  \"validFrom\": \"2025-01-01T00:00:00Z\",\n  \"validTo\": \"2026-12-31T23:59:59Z\"\n}"
            },
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/rules",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "rules"]
            },
            "description": "Create a new pricing rule with conditions and pricing structure"
          },
          "response": []
        },
        {
          "name": "Calculate Shipping Price",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"pricingRuleId\": 1,\n  \"weight\": 5.5,\n  \"distance\": 100,\n  \"additionalCharges\": 0,\n  \"metadata\": {\n    \"shipmentType\": \"standard\",\n    \"customerType\": \"regular\"\n  }\n}"
            },
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/calculate",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "calculate"]
            },
            "description": "Calculate shipping price based on weight, distance, and pricing rule"
          },
          "response": []
        },
        {
          "name": "Get Calculation History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/calculations?page=1&limit=10",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "calculations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Get paginated list of price calculations"
          },
          "response": []
        },
        {
          "name": "Get Calculations Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/calculations/count",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "calculations", "count"]
            },
            "description": "Get total count of price calculations"
          },
          "response": []
        },
        {
          "name": "Update Pricing Rule",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Premium Shipping\",\n  \"description\": \"Premium shipping rates\",\n  \"pricing\": {\n    \"basePrice\": 15.00,\n    \"pricePerKg\": 3.00,\n    \"pricePerKm\": 0.20\n  },\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/rules/1",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "rules", "1"]
            },
            "description": "Update pricing rule information"
          },
          "response": []
        },
        {
          "name": "Delete Pricing Rule",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{pricing_service_url}}/api/v1/pricing/rules/1",
              "host": ["{{pricing_service_url}}"],
              "path": ["api", "v1", "pricing", "rules", "1"]
            },
            "description": "Delete a pricing rule"
          },
          "response": []
        }
      ],
      "description": "Pricing service endpoints for shipping cost calculations. All responses use standardized ApiResponseDto format with data wrapper."
    },
    {
      "name": "üåê Translation Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/health",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "health"]
            },
            "description": "Check if the Translation service is running"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{translation_service_url}}/api/v1/health",
                  "host": ["{{translation_service_url}}"],
                  "path": ["api", "v1", "health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": {\n    \"status\": \"ok\",\n    \"timestamp\": \"2025-10-20T14:33:41.279Z\",\n    \"service\": \"translation-service\"\n  },\n  \"message\": \"Success\",\n  \"statusCode\": 200,\n  \"timestamp\": \"2025-10-20T14:33:41.280Z\",\n  \"success\": true\n}"
            }
          ]
        },
        {
          "name": "Translate Text",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Hello World\",\n  \"targetLanguage\": \"es\"\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translate",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translate"]
            },
            "description": "Translate text to target language using MD5 caching"
          },
          "response": []
        },
        {
          "name": "Translate Text with Context",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Save\",\n  \"targetLanguage\": \"es\",\n  \"sourceLanguage\": \"en\",\n  \"context\": {\n    \"category\": \"ui\",\n    \"module\": \"customer-management\",\n    \"component\": \"save-button\"\n  }\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translate",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translate"]
            },
            "description": "Translate text with context metadata"
          },
          "response": []
        },
        {
          "name": "Batch Translate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"texts\": [\"Hello\", \"Goodbye\", \"Thank you\"],\n  \"targetLanguage\": \"es\",\n  \"sourceLanguage\": \"en\"\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translate/batch",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translate", "batch"]
            },
            "description": "Translate multiple texts at once"
          },
          "response": []
        },
        {
          "name": "Get All Languages",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/languages",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "languages"]
            },
            "description": "Get all available languages"
          },
          "response": []
        },
        {
          "name": "Get Language by Code",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/languages/en",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "languages", "en"]
            },
            "description": "Get language by code (not ID)"
          },
          "response": []
        },
        {
          "name": "Create Language",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"pt\",\n  \"name\": \"Portuguese\",\n  \"localName\": \"Portugu√™s\",\n  \"status\": \"active\",\n  \"flag\": \"üáµüáπ\",\n  \"isDefault\": false,\n  \"metadata\": {\n    \"direction\": \"ltr\",\n    \"region\": \"PT\",\n    \"currency\": \"EUR\",\n    \"dateFormat\": \"DD/MM/YYYY\"\n  }\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/languages",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "languages"]
            },
            "description": "Create new language with localName, status, flag"
          },
          "response": []
        },
        {
          "name": "Update Language by Code",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"localName\": \"English (US)\",\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/languages/en",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "languages", "en"]
            },
            "description": "Update language by code (not ID)"
          },
          "response": []
        },
        {
          "name": "Delete Language by Code",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/languages/pt",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "languages", "pt"]
            },
            "description": "Delete language by code (not ID)"
          },
          "response": []
        },
        {
          "name": "Get All Translations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translations?page=1&limit=10",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get paginated list of translations"
          },
          "response": []
        },
        {
          "name": "Create Translation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"original\": \"Welcome\",\n  \"destination\": \"Bienvenido\",\n  \"languageCode\": \"es\",\n  \"context\": {\n    \"category\": \"ui\",\n    \"module\": \"homepage\"\n  }\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translations",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translations"]
            },
            "description": "Create translation with original, destination, languageCode"
          },
          "response": []
        },
        {
          "name": "Update Translation by Key",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"destination\": \"Hola Mundo\"\n}"
            },
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translations/abc123def456",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translations", "abc123def456"]
            },
            "description": "Update translation by MD5 key"
          },
          "response": []
        },
        {
          "name": "Delete Translation by Key",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/translations/abc123def456",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "translations", "abc123def456"]
            },
            "description": "Delete translation by MD5 key"
          },
          "response": []
        },
        {
          "name": "Get Available Languages List",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{translation_service_url}}/api/v1/translation/available-languages",
              "host": ["{{translation_service_url}}"],
              "path": ["api", "v1", "translation", "available-languages"]
            },
            "description": "Get list of all available language codes"
          },
          "response": []
        }
      ],
      "description": "Translation service endpoints - Uses MD5 caching with fields: localName, status, original, destination, languageCode. All responses use standardized ApiResponseDto format."
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default service URLs if not already set",
          "if (!pm.environment.get('user_service_url')) {",
          "    pm.environment.set('user_service_url', 'http://localhost:3003');",
          "}",
          "if (!pm.environment.get('customer_service_url')) {",
          "    pm.environment.set('customer_service_url', 'http://localhost:3004');",
          "}",
          "if (!pm.environment.get('carrier_service_url')) {",
          "    pm.environment.set('carrier_service_url', 'http://localhost:3005');",
          "}",
          "if (!pm.environment.get('pricing_service_url')) {",
          "    pm.environment.set('pricing_service_url', 'http://localhost:3006');",
          "}",
          "if (!pm.environment.get('translation_service_url')) {",
          "    pm.environment.set('translation_service_url', 'http://localhost:3007');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "user_service_url",
      "value": "http://localhost:3003",
      "type": "string"
    },
    {
      "key": "customer_service_url",
      "value": "http://localhost:3004",
      "type": "string"
    },
    {
      "key": "carrier_service_url",
      "value": "http://localhost:3005",
      "type": "string"
    },
    {
      "key": "pricing_service_url",
      "value": "http://localhost:3006",
      "type": "string"
    },
    {
      "key": "translation_service_url",
      "value": "http://localhost:3007",
      "type": "string"
    }
  ]
}
