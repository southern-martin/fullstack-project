version: '3.8'

name: shared-services

services:
  # Shared Database (already defined in docker-compose.yml)
  shared-user-db:
    image: mysql:8.0
    container_name: shared-user-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: shared_root_password_2024
      MYSQL_DATABASE: shared_user_db
      MYSQL_USER: shared_user
      MYSQL_PASSWORD: shared_password_2024
    ports:
      - "3306:3306"
    volumes:
      - shared_user_db_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - shared-services-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pshared_root_password_2024"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Auth Service
  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    environment:
      # Database Configuration (Shared Database)
      DB_HOST: shared-user-db
      DB_PORT: 3306
      DB_USERNAME: shared_user
      DB_PASSWORD: shared_password_2024
      DB_NAME: shared_user_db
      
      # JWT Configuration
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 24h
      
      # Service Configuration
      PORT: 3001
      NODE_ENV: development
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      shared-user-db:
        condition: service_healthy
    networks:
      - shared-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # User Service
  user-service:
    build:
      context: ../user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: unless-stopped
    environment:
      # Application Configuration
      NODE_ENV: development
      PORT: 3003
      
      # Database Configuration (Shared Database)
      DB_HOST: shared-user-db
      DB_PORT: 3306
      DB_USERNAME: shared_user
      DB_PASSWORD: shared_password_2024
      DB_DATABASE: shared_user_db
      DB_ROOT_PASSWORD: shared_root_password_2024
      
      # Frontend Configuration
      FRONTEND_URL: http://localhost:3000
      
      # JWT Configuration
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 24h
      
      # Service Discovery
      SERVICE_REGISTRY_URL: http://auth-service:3001/api/v1/services
      SERVICE_NAME: user-service
      SERVICE_VERSION: 1.0.0
    ports:
      - "3003:3003"
    depends_on:
      shared-user-db:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - shared-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  shared_user_db_data:
    driver: local

networks:
  shared-services-network:
    driver: bridge






